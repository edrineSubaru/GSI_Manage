# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
       # - run: npm test  -- this was causing me issues since i dint define it in my json file i will handle this later

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: docker build -t edrineviper/gsi_frontend:${{ github.sha }} .

    - name: Push Docker image
      run: docker push edrineviper/gsi_frontend:${{ github.sha }}

  post-build:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Display local run instructions
      run: |
        echo "ðŸš€ Docker image pushed successfully!"
        echo ""
        echo "To run the image locally, execute these commands:"
        echo ""
        echo "1. Pull the image:"
        echo "   docker pull edrineviper/gsi_frontend:${{ github.sha }}"
        echo ""
        echo "2. Stop and remove any existing container:"
        echo "   docker stop gsi_app || true"
        echo "   docker rm gsi_app || true"
        echo ""
        echo "3. Run the new container:"
        echo "   docker run -d --name gsi_app -p 80:80 edrineviper/gsi_frontend:${{ github.sha }}"
        echo ""
        echo "4. Access your app at: http://localhost"
        echo ""
        echo "To view logs:"
        echo "   docker logs gsi_app"
        echo ""
        echo "To stop the container:"
        echo "   docker stop gsi_app"
